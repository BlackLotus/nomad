# Copyright 2018 Markus Scheidgen
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an"AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3'

services:
    # an object store for uploads
    minio:
        restart: always
        image: minio/minio:RELEASE.2018-06-08T03-49-38Z
        # image: minio/minio
        container_name: nomadxt_minio
        ports:
            - ${MINIO_HOST_PORT}:9000
        volumes:
            - ${VOLUME_BINDS}/minio:/data
        environment:
            - MINIO_ACCESS_KEY=AKIAIOSFODNN7EXAMPLE
            - MINIO_SECRET_KEY=wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
        command: server /data

    minio-config:
        image: minio/mc
        links:
            - minio
        entrypoint: /bin/sh -c "
            sleep 5;
            /usr/bin/mc config host add minio http://minio:9000 AKIAIOSFODNN7EXAMPLE wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY;
            /usr/bin/mc mb minio/uploads -p;
            /usr/bin/mc mb minio/archive -p;
            /usr/bin/mc mb minio/repository -p;
            /usr/bin/mc policy download minio/repository;
            /usr/bin/mc policy download minio/archive;
            /usr/bin/mc policy upload minio/uploads;"  # bug #22

    # broker for celery
    rabbitmq:
        restart: always
        image: rabbitmq
        container_name: nomadxt_rabbitmq
        environment:
            - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=rabbitmq
            - RABBITMQ_DEFAULT_VHOST=/
        ports:
            - ${RABBITMQ_HOST_PORT}:5672
        volumes:
            - nomadxt_rabbitmq:/var/lib/rabbitmq

    # results backend for celery
    redis:
        image: redis:3.0-alpine
        container_name: nomadxt_redis
        command: redis-server --appendonly yes
        ports:
            - ${REDIS_HOST_PORT}:6379
        volumes:
            - nomadxt_redis:/data

    # the search engine
    elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        volumes:
            - nomadxt_elastic:/usr/share/elasticsearch/data
        ports:
            - ${ELASTIC_HOST_PORT}:9200

    # the user data db
    mongo:
        image: mongo:latest
        container_name: nomadxt_mongo
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_LOG_DIR=/dev/null
        volumes:
            - nomadxt_mongo:/data/db
        ports:
            - ${MONGO_HOST_PORT}:27017
        command: mongod --smallfiles --logpath=/dev/null # --quiet

    # used for centralized logging
    elk:
        restart: always
        build: ../elk/
        container_name: nomadxt_elk
        expose:
            - 5000 # logstash beats
            - 5044 # logstash tcp
        volumes:
            - nomadxt_elk:/var/lib/elasticsearch
        ports:
            - ${KIBANA_HOST_PORT}:5601  # kibana web

    # nomad processing worker
    worker:
        restart: always
        build: ../../
        environment:
            - NOMAD_MINIO_PORT=9000
            - NOMAD_MINIO_HOST=minio
            - NOMAD_RABBITMQ_HOST=rabbitmq
            - NOMAD_REDIS_HOST=redis
            - NOMAD_LOGSTASH_HOST=elk
            - NOMAD_ELASTIC_HOST=elastic
            - NOMAD_MONGO_HOST=mongo
        links:
            - minio
            - redis
            - rabbitmq
            - elastic
            - mongo
        volumes:
            - ${VOLUME_BINDS}/fs:/app/.volumes/fs
        command: python -m celery worker -l info -A nomad.processing

    # nomad upload handler
    handler:
        restart: always
        build: ../../
        environment:
            - NOMAD_MINIO_PORT=9000
            - NOMAD_MINIO_HOST=minio
            - NOMAD_RABBITMQ_HOST=rabbitmq
            - NOMAD_REDIS_HOST=redis
            - NOMAD_LOGSTASH_HOST=elk
            - NOMAD_MONGO_HOST=mongo
            - NOMAD_ELASTIC_HOST=elastic
        links:
            - minio
            - redis
            - rabbitmq
            - elastic
            - mongo
        command: python -m nomad.processing.handlerdaemon

    # nomad api
    api:
        restart: always
        build: ../../
        environment:
            - NOMAD_MINIO_PORT=9000
            - NOMAD_MINIO_HOST=minio
            - NOMAD_RABBITMQ_HOST=rabbitmq
            - NOMAD_REDIS_HOST=redis
            - NOMAD_LOGSTASH_HOST=elk
            - NOMAD_ELASTIC_HOST=elastic
            - NOMAD_MONGO_HOST=mongo
            - NOMAD_API_BASE_PATH=/nomadxt/api
            - NOMAD_OBJECTS_HOST=${EXTERNAL_HOST}
            - NOMAD_OBJECTS_PORT=${EXTERNAL_PORT}
            - NOMAD_OBJECTS_BASE_PATH=/nomadxt/objects
        links:
            - minio
            - redis
            - rabbitmq
            - elastic
            - mongo
        ports:
            - ${API_HOST_PORT}:8000
        command: python -m gunicorn.app.wsgiapp -w 4 -b 0.0.0.0:8000 nomad.api:app

    # nomad gui
    gui:
        build: ../../gui/
        ports:
            - ${GUI_HOST_PORT}:8080
        command: serve

    # reverse proxy everything together
    proxy:
        restart: always
        image: nginx:1.13.9-alpine
        links:
            - elk
            - gui
            - minio
            - api
        ports:
            - ${APP_HOST_PORT}:80
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
        command: nginx -g 'daemon off;'

volumes:
    nomadxt_minio:
    nomadxt_mongo:
    nomadxt_elastic:
    nomadxt_redis:
    nomadxt_rabbitmq:
    nomadxt_elk:


