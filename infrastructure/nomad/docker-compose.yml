# Copyright 2018 Markus Scheidgen
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an"AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.4'

x-common-variables: &nomad_backend_env
    NOMAD_RABBITMQ_HOST: rabbitmq
    NOMAD_LOGSTASH_HOST: elk
    NOMAD_ELASTIC_HOST: elastic
    NOMAD_MONGO_HOST: mongo

services:
    # broker for celery
    rabbitmq:
        restart: always
        image: rabbitmq
        container_name: nomad_rabbitmq
        environment:
            - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=rabbitmq
            - RABBITMQ_DEFAULT_VHOST=/
        ports:
            - ${RABBITMQ_HOST_PORT}:5672
        volumes:
            - nomad_rabbitmq:/var/lib/rabbitmq

    # the search engine
    elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        container_name: nomad_elastic
        volumes:
            - nomad_elastic:/usr/share/elasticsearch/data
        ports:
            - ${ELASTIC_HOST_PORT}:9200

    # the user data db
    mongo:
        image: mongo:latest
        container_name: nomad_mongo
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_LOG_DIR=/dev/null
        volumes:
            - nomad_mongo:/data/db
        ports:
            - ${MONGO_HOST_PORT}:27017
        command: mongod --smallfiles --logpath=/dev/null # --quiet

    # used for centralized logging
    elk:
        restart: always
        build: ../elk/
        image: nomad/elk
        container_name: nomad_elk
        expose:
            - 5000 # logstash beats
            - 5044 # logstash tcp
        volumes:
            - nomad_elk:/var/lib/elasticsearch
        ports:
            - ${KIBANA_HOST_PORT}:5601  # kibana web

    # nomad processing worker
    worker:
        restart: always
        build:
            context: ../../
            dockerfile: backend.Dockerfile
        image: nomad/backend
        container_name: nomad_worker
        environment:
            <<: *nomad_backend_env
            NOMAD_SERVICE: nomad_worker
        links:
            - rabbitmq
            - elastic
            - mongo
            - elk
        volumes:
            - ${VOLUME_BINDS}/fs:/app/.volumes/fs
        command: python -m celery worker -l info -A nomad.processing

    # nomad api
    api:
        restart: always
        image: nomad/backend
        depends_on:
            - worker
        container_name: nomad_api
        environment:
            <<: *nomad_backend_env
            NOMAD_API_BASE_PATH: /nomad/api
            NOMAD_API_HOST: ${EXTERNAL_HOST}
            NOMAD_API_PORT: ${EXTERNAL_PORT}
            NOMAD_SERVICE: nomad_api
        links:
            - rabbitmq
            - elastic
            - mongo
            - elk
        ports:
            - ${API_HOST_PORT}:8000
        command: python -m gunicorn.app.wsgiapp -w 4 -b 0.0.0.0:8000 nomad.api:app

    # nomad gui
    gui:
        build:
            context: ../../
            dockerfile: frontend.Dockerfile
        image: nomad/frontend
        container_name: nomad_gui
        ports:
            - ${GUI_HOST_PORT}:8080
        volumes:
            - ./gui.conf:/etc/nginx/conf.d/default.conf:ro
        command: nginx -g 'daemon off;'

    # reverse proxy everything together
    proxy:
        restart: always
        image: nginx:1.13.9-alpine
        container_name: nomad_proxy
        links:
            - elk
            - gui
            - api
        ports:
            - ${APP_HOST_PORT}:80
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
        command: nginx -g 'daemon off;'

volumes:
    nomad_mongo:
    nomad_elastic:
    nomad_redis:
    nomad_rabbitmq:
    nomad_elk:


