# default installed image for docker executor is: python:3.6
# using an image that can do git, docker, docker-compose
image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair/ci-runner

# Uncomment the next lines, to run each pipeline/job in its own docker environment.
# Otherwise, it will use the docker of the gitlab runner host (e.g. enc-preprocessing...).
# This will give it access to a persistent layer cache, which will not be available
# with the docker service.
# services:
#   - docker:dind

# TODO remove CI_NOMAD_DEV_PROXY

stages:
  - build
  - test
  - deploy
  - release

variables:
  TEST_IMAGE: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}
  STABLE_IMAGE: ${CI_REGISTRY_IMAGE}:stable
  LATEST_IMAGE: ${CI_REGISTRY_IMAGE}:latest

build:
  stage: build
  before_script:
    - git submodule sync --recursive
    - git submodule update --init --recursive --jobs=4
    # create the version information
    - ./gitinfo.sh
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
  script:
    - docker build -t $TEST_IMAGE .
    - docker push $TEST_IMAGE
  except:
    - /^dev-.*$/
    - tags

python linting:
  stage: test
  image: $TEST_IMAGE
  script:
    - cd /app
    - python -m pycodestyle --ignore=E501,E701,E731 nomad tests
    - python -m pylint --load-plugins=pylint_mongoengine,nomad.metainfo.pylint_plugin nomad tests
    - python -m mypy --ignore-missing-imports --follow-imports=silent --no-strict-optional nomad tests
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^dev-.*$/
      - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i

gui linting:
  stage: test
  before_script:
    - git submodule sync
    - git submodule update --init -- gui/materia gui/crystcif-parse
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev search-quantities > gui/src/searchQuantities.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev units > gui/src/unitsData.js
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev toolkit-metadata > gui/src/toolkitMetadata.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev metainfo > gui/src/metainfo.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev parser-metadata > gui/src/parserMetadata.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev example-upload-metadata > gui/src/exampleUploads.json
    - docker run --rm $TEST_IMAGE cat dependencies/nomad-remote-tools-hub/tools.json > gui/src/northTools.json
  script:
    - cd gui
    - yarn --network-timeout 1200000
    - yarn run lint
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^dev-.*$/
      - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i

python tests:
  stage: test
  image: $TEST_IMAGE
  services:
    - name: rabbitmq:3.9.13
      alias: rabbitmq
    - name: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
      alias: elastic
      command:
        - bash
        - "-c"
        - ES_JAVA_OPTS="-Xms512m -Xmx512m" docker-entrypoint.sh elasticsearch -Ediscovery.type=single-node -Expack.security.enabled=false
    - name: mongo:5.0.6
      alias: mongo
  variables:
    RABBITMQ_ERLANG_COOKIE: SWQOKODSQALRPCLNMEQG
    RABBITMQ_DEFAULT_USER: rabbitmq
    RABBITMQ_DEFAULT_PASS: rabbitmq
    RABBITMQ_DEFAULT_VHOST: /
    NOMAD_RABBITMQ_HOST: rabbitmq
    NOMAD_ELASTIC_HOST: elastic
    NOMAD_MONGO_HOST: mongo
    NOMAD_KEYCLOAK_PASSWORD: ${CI_KEYCLOAK_ADMIN_PASSWORD}
    NOMAD_NORMALIZE_SPRINGER_DB_PATH: /nomad/fairdi/db/data/springer.msg
  script:
    - sleep 5
    - curl http://elastic:9200/_cat/health
    - cd /app
    - ls /builds
    - python -m pytest --cov=nomad -sv tests
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^dev-.*$/
      - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i

gui tests:
  stage: test
  before_script:
    - git submodule sync
    - git submodule update --init -- gui/materia gui/crystcif-parse
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev search-quantities > gui/src/searchQuantities.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev units > gui/src/unitsData.js
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev toolkit-metadata > gui/src/toolkitMetadata.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev example-upload-metadata > gui/src/exampleUploads.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev metainfo > gui/src/metainfo.json
    - docker run --rm $TEST_IMAGE python -m nomad.cli dev parser-metadata > gui/src/parserMetadata.json
    - docker run --rm $TEST_IMAGE cat dependencies/nomad-remote-tools-hub/tools.json > gui/src/northTools.json
  script:
    - cd gui
    - yarn --network-timeout 1200000
    - yarn test --ci --collectCoverage --reporters=default --reporters=jest-junit
  coverage: /Lines\s*:\s*(\d+.?\d*)%/
  artifacts:
      when: always
      reports:
        junit:
          - gui/junit.xml
        cobertura: gui/coverage/cobertura-coverage.xml
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^dev-.*$/
      - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i

install tests:
  stage: test
  image: python:3.7
  before_script:
    - git submodule sync --recursive
    - sleep 5
    - git submodule update --init --recursive --jobs=4
  script:
    - pip install --upgrade pip
    - pip install fastentrypoints
    - pip install pyyaml
    - pip install numpy
    - python setup.py compile
    - python setup.py sdist
    - pip install dist/nomad-lab-*.tar.gz
    - python -c "import nomad.datamodel, nomad.datamodel.metainfo, nomad.client"
    - pip install `echo dist/nomad-lab-*.tar.gz`[parsing]
    - python -m nomad.cli parse tests/data/parsers/vasp/vasp.xml
    - git clone --branch v1.0.0 https://github.com/nomad-coe/nomad-parser-example.git example-parser
    - cd example-parser
    - python exampleparser/__main__.py tests/data/example.out
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^dev-.*$/
      - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i

dev setup tests:
  stage: test
  image: python:3.7
  script:
    - pip install --upgrade pip
    - ./setup.sh
    - python -m nomad.cli parse tests/data/parsers/vasp/vasp.xml
    - python -c "import nomad.app"
    - python -c "import nomad.processing"
  except:
    refs:
      - tags
    variables:
      - $CI_COMMIT_REF_NAME =~ /^dev-.*$/
      - $CI_COMMIT_MESSAGE =~ /\[skip[ _-]tests?\]/i

deploy dev:
  stage: deploy
  image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair/ci-runner:helm3.9.0
  before_script:
    - mkdir ~/.kube/
    - echo ${CI_K8S_CONFIG} | base64 -d > ~/.kube/config
  script:
    - helm dependency update ops/helm/nomad
    - RELEASE_NAME=`echo ${CI_COMMIT_REF_NAME} | sed -e 's/[^A-Za-z0-9\-]/-/g' | sed -e 's/^[0-9-]*//g' | head -c 43`
    - helm upgrade $RELEASE_NAME ops/helm/nomad
      --install
      --namespace nomad
      --values ops/helm/nomad/deployments/dev-values.yaml
      --set proxy.external.path=/dev/rae/$RELEASE_NAME
      --set jupyterhub.hub.baseUrl=/dev/rae/$RELEASE_NAME/north
      --set jupyterhub.fullnameOverride=${RELEASE_NAME}
      --set jupyterhub.nameOverride="nomad"
      --set image.tag=$CI_COMMIT_REF_SLUG
      --set roll=true
      --wait
  after_script:
    - docker pull $TEST_IMAGE
    - docker run
      -t -e NOMAD_KEYCLOAK_REALM_NAME=fairdi_nomad_prod
      $TEST_IMAGE
      python -m nomad.cli client -n https://nomad-lab.eu/dev/rae/$RELEASE_NAME/api -u test -w $CI_NOMAD_TEST_PASSWORD integrationtests  --skip-publish --skip-doi
  except:
    - /^dev-.*$/
  when: manual

deploy prod:
  stage: deploy
  before_script:
    - mkdir ~/.kube/
    - echo ${CI_K8S_PROD_CONFIG} | base64 -d > ~/.kube/config
  script:
    - helm dependency update ops/helm/nomad
    - helm upgrade --install nomad-prod-v1 ops/helm/nomad -f ops/helm/nomad/deployments/prod-v1-values.yaml --set image.tag=$CI_COMMIT_REF_SLUG,roll=true --wait
    - docker pull $TEST_IMAGE
    - docker run -t -e NOMAD_KEYCLOAK_REALM_NAME=fairdi_nomad_prod $TEST_IMAGE python -m nomad.cli client -n https://nomad-lab.eu/prod/v1/api -u test -w $CI_NOMAD_TEST_PASSWORD integrationtests  --skip-publish --skip-doi
  except:
    - /^dev-.*$/
  when: manual

deploy prod staging:
  stage: deploy
  before_script:
    - mkdir ~/.kube/
    - echo ${CI_K8S_PROD_CONFIG} | base64 -d > ~/.kube/config
  script:
    - helm dependency update ops/helm/nomad
    - helm upgrade --install nomad-staging-v1 ops/helm/nomad -f ops/helm/nomad/deployments/prod-staging-values.yaml --set image.tag=$CI_COMMIT_REF_SLUG,roll=true --wait
    - docker pull $TEST_IMAGE
    - docker run -t -e NOMAD_KEYCLOAK_REALM_NAME=fairdi_nomad_prod $TEST_IMAGE python -m nomad.cli client -n https://nomad-lab.eu/prod/v1/staging/api -u test -w $CI_NOMAD_TEST_PASSWORD integrationtests  --skip-publish --skip-doi
  except:
    - /^dev-.*$/
  when: manual

deploy prod test:
  stage: deploy
  before_script:
    - mkdir ~/.kube/
    - echo ${CI_K8S_PROD_CONFIG} | base64 -d > ~/.kube/config
  script:
    - helm dependency update ops/helm/nomad
    - helm upgrade --install nomad-test-v1 ops/helm/nomad -f ops/helm/nomad/deployments/prod-test-values.yaml --set image.tag=$CI_COMMIT_REF_SLUG,roll=true --wait
    - docker pull $TEST_IMAGE
    - docker run -t -e NOMAD_KEYCLOAK_REALM_NAME=fairdi_nomad_prod $TEST_IMAGE python -m nomad.cli client -n https://nomad-lab.eu/prod/v1/test/api -u test -w $CI_NOMAD_TEST_PASSWORD integrationtests  --skip-publish --skip-doi
  except:
    - /^dev-.*$/
  when: manual

deploy prod util:
  stage: deploy
  before_script:
    - mkdir ~/.kube/
    - echo ${CI_K8S_PROD_CONFIG} | base64 -d > ~/.kube/config
  script:
    - helm dependency update ops/helm/nomad
    - helm upgrade --install nomad-util-v1 ops/helm/nomad -f ops/helm/nomad/deployments/prod-util-values.yaml --set image.tag=$CI_COMMIT_REF_SLUG,roll=true --wait
    - docker pull $TEST_IMAGE
    - docker run -t -e NOMAD_KEYCLOAK_REALM_NAME=fairdi_nomad_prod $TEST_IMAGE python -m nomad.cli client -n https://nomad-lab.eu/prod/v1/util/api -u test -w $CI_NOMAD_TEST_PASSWORD integrationtests  --skip-publish --skip-doi
  except:
    - /^dev-.*$/
  when: manual

release latest image:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $LATEST_IMAGE
    - docker push $LATEST_IMAGE
  except:
    - /^dev-.*$/
  when: manual

release stable image:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker pull $TEST_IMAGE
    - docker tag $TEST_IMAGE $LATEST_IMAGE
    - docker push $LATEST_IMAGE
    - docker tag $TEST_IMAGE $STABLE_IMAGE
    - docker push $STABLE_IMAGE
  when: manual
  only:
    - tags

python package:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker pull $TEST_IMAGE
    - docker run --rm $TEST_IMAGE python -m twine upload -u gitlab-ci-token -p ${CI_JOB_TOKEN} --repository-url https://gitlab.mpcdf.mpg.de/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/nomad-lab-*.tar.gz
  except:
    - /^dev-.*$/
  when: manual

pypi package:
  stage: release
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN gitlab-registry.mpcdf.mpg.de
    - docker pull $TEST_IMAGE
    - docker run --rm $TEST_IMAGE bash -c "python -m twine upload -u $CI_TWINE_USER -p $CI_TWINE_PASSWORD dist/nomad-lab-*.tar.gz"
  except:
    - /^dev-.*$/
  when: manual
