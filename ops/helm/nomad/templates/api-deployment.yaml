apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "nomad.fullname" . }}-api
  labels:
    app.kubernetes.io/name: {{ include "nomad.name" . }}-api
    helm.sh/chart: {{ include "nomad.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.api.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "nomad.name" . }}-api
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "nomad.name" . }}-api
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ include "nomad.name" . }}-api
        image: "{{ .Values.images.nomad.name }}:{{ .Values.images.nomad.tag }}"
        volumeMounts:
        - mountPath: /app/.volumes/fs
          name: files-volume
        env:
        - name: NOMAD_SERVICE
          value: "api"
        - name: NOMAD_LOGSTASH_HOST
          value: "{{ .Values.logstash.host }}"
        - name: NOMAD_LOGSTASH_TCPPORT
          value: "{{ .Values.logstash.port }}"
        - name: NOMAD_CONSOLE_LOGLEVEL
          value: "{{ .Values.api.console_loglevel }}"
        - name: NOMAD_LOGSTASH_LEVEL
          value: "{{ .Values.api.logstash_loglevel }}"
        - name: NOMAD_API_PORT
          value: "{{ .Values.api.port }}"
        - name: NOMAD_API_SECRET
          value: "{{ .Values.api.secret }}"
        command: ["python", "-m", "gunicorn.app.wsgiapp", "-b 0.0.0.0:8000", "nomad.api:app"]
      imagePullSecrets:
      - name: {{ .Values.images.secret }}
      volumes:
      - name: files-volume
        hostPath:
          path: {{ .Values.volumes.files }}
          type: Directory
