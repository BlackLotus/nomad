image:
  pullPolicy: "Always"

proxy:
  external:
    host: "nomad-lab.eu"

ingress:
  enabled: true

app:
  worker: 2

gui:
  debug: true

worker:
  replicas: 1
  routing: "queue"
  # request and limit in GB, good prod sizes are 64, 420
  memrequest: 1

elastic:
  host: elasticsearch.elasticsearch-7.svc.cluster.local

mongo:
  host: rs0/mongodb-0.mongo.mongodb.svc.cluster.local,mongodb-1.mongo.mongodb.svc.cluster.local,mongodb-2.mongo.mongodb.svc.cluster.local

logstash:
  host: logstash.elk.svc.cluster.local

dbname: nomad_dev_v1

keycloak:
  serverUrl: "https://nomad-lab.eu/fairdi/keycloak/auth/"
  serverExternalUrl: "https://nomad-lab.eu/fairdi/keycloak/auth/"
  passwordSecret: "nomad-keycloak-password"
  realmName: "fairdi_nomad_prod"
  clientId: "nomad_public"
  admin_user_id: "82efac55-6187-408c-8027-b98580c0e1c5"

volumes:
  prefixSize: 1
  public: /nomad/fairdi/dev/v1/fs/public
  staging: /nomad/fairdi/dev/v1/fs/staging
  tmp: /nomad/fairdi/dev/v1/fs/tmp
  nomad: /nomad

services:
  jupyterhub:
    enabled: true

jupyterhub:
  # enabled: true
  fullnameOverride:
  nameOverride:
  proxy:
    service:
      type: ClusterIP
  hub:
    baseUrl:
    db:
      # type: sqlite-memory
      type: sqlite-pvc
      pvc:
        storageClassName: manual-test-north-hub-db
    allowNamedServers: true
    config:
      JupyterHub:
        authenticator_class: generic-oauth
      Authenticator:
        auto_login: true
        enable_auth_state: true
      GenericOAuthenticator:
        client_id: nomad_public
        oauth_callback_url: https://nomad-lab.eu/fairdi/nomad/latest/north/hub/oauth_callback
        authorize_url: https://nomad-lab.eu/fairdi/keycloak/auth/realms/fairdi_nomad_prod/protocol/openid-connect/auth
        token_url: https://nomad-lab.eu/fairdi/keycloak/auth/realms/fairdi_nomad_prod/protocol/openid-connect/token
        userdata_url: https://nomad-lab.eu/fairdi/keycloak/auth/realms/fairdi_nomad_prod/protocol/openid-connect/userinfo
        login_service: keycloak
        username_key: preferred_username
        userdata_params:
          state: state
  singleuser:
    podNameTemplate: 
    initContainers:
      - name: fix-permissions
        image: busybox
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsUser: 0
        command: ["/bin/sh", "-c", "chown 1000:100 /home/jovyan"]
        volumeMounts:
          - mountPath: /home/jovyan
            name: home
            subPath: "{username}"
    storage:
      # type: none
      type: static
      homeMountPath: /home/jovyan/work
      static:
        pvcName: test-north-home
        subPath: "{username}"
  cull:
    enabled: true
    timeout: 3600
    every: 600
    removeNamedServers: true
  prePuller:
    hook:
      enabled: false
    continuous:
      enabled: false
  scheduling:
    userScheduler:
      enabled: false
    podPriority:
      enabled: false
    userPlaceholder:
      enabled: false
      replicas: 0
