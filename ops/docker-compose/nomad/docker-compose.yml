# Copyright 2018 Markus Scheidgen
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an"AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

version: '3.4'

x-common-variables: &nomad_backend_env
    NOMAD_RABBITMQ_HOST: rabbitmq
    NOMAD_LOGSTASH_HOST: elk
    NOMAD_ELASTIC_HOST: elastic
    NOMAD_MONGO_HOST: mongo
    NOMAD_KEYCLOAK_HOST: keycloak

services:
    # keycload for user management
    keycloak:
        restart: unless-stopped
        build: ../../containers/keycloak/
        image: nomad/keycloak
        container_name: nomad_keycloak
        volumes:
            - nomad_keycloak:/opt/jboss/keycloak/standalone/data
        ports:
            - 8002:8080

    # broker for celery
    rabbitmq:
        restart: unless-stopped
        image: rabbitmq:3.7.17
        container_name: nomad_rabbitmq
        environment:
            - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=rabbitmq
            - RABBITMQ_DEFAULT_VHOST=/
        volumes:
            - nomad_rabbitmq:/var/lib/rabbitmq

    # the search engine
    elastic:
        restart: always
        image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
        container_name: nomad_elastic
        volumes:
            - nomad_elastic:/usr/share/elasticsearch/data

    # the user data db
    mongo:
        restart: always
        image: mongo:4
        container_name: nomad_mongo
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_LOG_DIR=/dev/null
        volumes:
            - nomad_mongo:/data/db
        command: mongod --logpath=/dev/null # --quiet

    # nomad processing worker
    worker:
        restart: always
        image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair:latest
        container_name: nomad_worker
        environment:
            <<: *nomad_backend_env
            NOMAD_SERVICE: nomad_worker
        links:
            - keycloak
            - rabbitmq
            - elastic
            - mongo
        volumes:
            - nomad_files:/app/.volumes/fs
        command: python -m celery worker -l info -A nomad.processing -Q celery,cacls,uploads

    # nomad app
    app:
        restart: always
        image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair:latest
        container_name: nomad_api
        environment:
            <<: *nomad_backend_env
            NOMAD_SERVICE: nomad_api
        links:
            - keycloak
            - rabbitmq
            - elastic
            - mongo
        volumes:
            - nomad_files:/app/.volumes/fs
        command: python -m gunicorn.app.wsgiapp -w 4 --log-config ops/gunicorn.log.conf -b 0.0.0.0:8000 --timeout 300 nomad.app:app

    # nomad gui
    gui:
        restart: always
        image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair/frontend:latest
        container_name: nomad_gui
        command: nginx -g 'daemon off;'
        links:
            - app

volumes:
    nomad_keycloak:
    nomad_mongo:
    nomad_elastic:
    nomad_rabbitmq:
    nomad_files:
