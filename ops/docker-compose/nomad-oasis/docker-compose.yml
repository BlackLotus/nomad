version: '3.4'

x-common-variables: &nomad_backend_env
    NOMAD_RABBITMQ_HOST: rabbitmq
    NOMAD_ELASTIC_HOST: elastic
    NOMAD_MONGO_HOST: mongo

services:
    # keycloak user management
    keycloak:
        restart: always
        image: jboss/keycloak:16.1.1
        container_name: nomad_oasis_keycloak
        environment:
            - PROXY_ADDRESS_FORWARDING=true
            - KEYCLOAK_FRONTEND_URL=http://localhost/keycloak/auth
        volumes:
            - keycloak:/opt/jboss/keycloak/standalone/data
        # Uncomment to get access to the admin console.
        # ports:
        #   - 8080:8080

    # broker for celery
    rabbitmq:
        restart: always
        image: rabbitmq:3.9.13
        container_name: nomad_oasis_rabbitmq
        environment:
            - RABBITMQ_ERLANG_COOKIE=SWQOKODSQALRPCLNMEQG
            - RABBITMQ_DEFAULT_USER=rabbitmq
            - RABBITMQ_DEFAULT_PASS=rabbitmq
            - RABBITMQ_DEFAULT_VHOST=/
        volumes:
            - rabbitmq:/var/lib/rabbitmq

    # the search engine
    elastic:
        restart: always
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.1
        container_name: nomad_oasis_elastic
        environment:
            - discovery.type=single-node
        volumes:
            - elastic:/usr/share/elasticsearch/data

    # the user data db
    mongo:
        restart: always
        image: mongo:5.0.6
        container_name: nomad_oasis_mongo
        environment:
            - MONGO_DATA_DIR=/data/db
            - MONGO_LOG_DIR=/dev/null
        volumes:
            - mongo:/data/db
        command: mongod --logpath=/dev/null # --quiet

    # nomad worker (processing)
    worker:
        restart: always
        image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair:north
        container_name: nomad_oasis_worker
        environment:
            <<: *nomad_backend_env
            NOMAD_SERVICE: nomad_oasis_worker
        links:
            - rabbitmq
            - elastic
            - mongo
            - keycloak
        volumes:
            - ./nomad.yaml:/app/nomad.yaml
            - files:/app/.volumes/fs
        command: python -m celery worker -l info -A nomad.processing -Q celery

    # nomad app (api + gui)
    app:
        restart: always
        image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair:north
        container_name: nomad_oasis_app
        environment:
            <<: *nomad_backend_env
            NOMAD_SERVICE: nomad_oasis_app
            NOMAD_SERVICES_API_PORT: 80
        links:
            - rabbitmq
            - elastic
            - mongo
            - keycloak
        volumes:
            - ./nomad.yaml:/app/nomad.yaml
            - files:/app/.volumes/fs
        command: ./run.sh

    # nomad remote tools hub (JupyterHUB, e.g. for AI Toolkit)
    hub:
        restart: always
        image: gitlab-registry.mpcdf.mpg.de/nomad-lab/nomad-fair:north
        container_name: nomad_oasis_hub
        environment:
            <<: *nomad_backend_env
            NOMAD_SERVICE: nomad_oasis_hub
            NOMAD_NORTH_DOCKER_NETWORK: nomad_oasis_network
            NOMAD_NORTH_HUB_IP_CONNECT: hub
            NOMAD_NORTH_HUB_IP: '0.0.0.0'
            NOMAD_NORTH_HUB_HOST: 'hub'
            NOMAD_SERVICES_API_HOST: app
        links:
            - app
        volumes:
            - ./nomad.yaml:/app/nomad.yaml
            - /var/run/docker.sock:/var/run/docker.sock
            - ./.volumes/fs:/app/.volumes/fs
        command: python -m nomad.cli admin run hub
        user: root

    # nomad gui (a reverse proxy for nomad)
    gui:
        restart: always
        image: nginx:1.13.9-alpine
        container_name: nomad_oasis_gui
        command: nginx -g 'daemon off;'
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        links:
            - app
            - hub
            - keycloak
        ports:
            - 80:80


networks:
    default:
        name: nomad_oasis_network

valumes:
    mongo:
    elastic:
    rabbitmq:
    files:
    keycloak:
